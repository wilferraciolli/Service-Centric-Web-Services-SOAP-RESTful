/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package clienttotest;

import java.io.IOException;
import java.net.URL;
import java.text.DecimalFormat;
import static javax.swing.JOptionPane.showMessageDialog;
import javax.xml.xpath.XPath;
import javax.xml.xpath.XPathConstants;
import javax.xml.xpath.XPathExpressionException;
import javax.xml.xpath.XPathFactory;
import org.w3c.dom.NodeList;
import org.xml.sax.InputSource;

/**
 *
 * @author Wiliam
 */
public class WeatherRest extends javax.swing.JFrame {

    /**
     * Creates new form WeatherRest
     */
    public WeatherRest() {
        initComponents();
    }
    //void to get the city weather details ***********************************************************
    public void getWeather(String city){
       
        // Formula to get Celsius 째C = K - 273.15
        Double Kelvin = 273.15;
          try {
            String urlToFormat = "http://api.openweathermap.org/data/2.5/weather?q=" + city + "&mode=xml";
            
            XPath xpathGetWeather = XPathFactory.newInstance().newXPath();
            URL weatherURL = new URL(urlToFormat);
            InputSource restResponse = new InputSource(weatherURL.openConnection().getInputStream());

            NodeList nodes = (NodeList) xpathGetWeather.evaluate("/current", restResponse, XPathConstants.NODESET);
            String temperature = "";
            String min = "";
            String max = "";
            String humidity = "";
            String weatherCondition = "";
            
            for (int i = 0; i < nodes.getLength(); i++) {
                //System.out.println(nodes.item(i).getTextContent());

                System.out.println(weatherURL);
                temperature = (String) xpathGetWeather.evaluate("/*/temperature[1]/@value", nodes.item(i), XPathConstants.STRING);
                min = (String) xpathGetWeather.evaluate("/*/temperature[1]/@min", nodes.item(i), XPathConstants.STRING);
                max = (String) xpathGetWeather.evaluate("/*/temperature[1]/@max", nodes.item(i), XPathConstants.STRING);
                humidity = (String) xpathGetWeather.evaluate("/*/humidity/@value", nodes.item(i), XPathConstants.STRING);
                weatherCondition = (String) xpathGetWeather.evaluate("/*/weather/@value", nodes.item(i), XPathConstants.STRING);
                
                //convert from Kelvin to Celsuis
               // String temp = Double.valueOf(temperature);
                Double temperatureN = Double.valueOf(temperature) - Kelvin;
                String temperatureNew = new DecimalFormat("#.#").format(temperatureN);
                Double minN = Double.valueOf(min) - Kelvin;
                String minNew = new DecimalFormat("#.#").format(minN);
                Double maxN = Double.valueOf(max) - Kelvin;
                String maxNew = new DecimalFormat("#.#").format(maxN);

                //set the labels
                lblCity.setText(city);
                lblTemperature.setText("Now " + temperatureNew + "째C");
                lblMinTemp.setText("Min " + minNew + "째C");
                lblMaxTemp.setText("Max " + maxNew + "째C");
                lblHumidity.setText("Humidity " + humidity + "%");
                lblCondition.setText(weatherCondition);
                System.out.println("current temp is " + temperatureN);
                System.out.println("min temp is " + minN);
                System.out.println("max temp is " + maxN);
                System.out.println("humidity is " + humidity + "%");
                System.out.println("Weather is " + weatherCondition);
            }
        } catch (IOException | XPathExpressionException e) {
            showMessageDialog(null, e.getMessage());
        }
          
          
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblCity = new javax.swing.JLabel();
        lblTemperature = new javax.swing.JLabel();
        lblMinTemp = new javax.swing.JLabel();
        lblMaxTemp = new javax.swing.JLabel();
        lblHumidity = new javax.swing.JLabel();
        lblCondition = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setAlwaysOnTop(true);
        setMinimumSize(new java.awt.Dimension(550, 315));
        setPreferredSize(new java.awt.Dimension(550, 315));
        setResizable(false);
        getContentPane().setLayout(null);

        lblCity.setText("jLabel2");

        lblTemperature.setText("jLabel2");

        lblMinTemp.setText("jLabel2");

        lblMaxTemp.setText("jLabel2");

        lblHumidity.setText("jLabel2");

        lblCondition.setText("jLabel2");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(lblCity)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblCondition)
                .addGap(17, 17, 17)
                .addComponent(lblTemperature, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblMinTemp, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblMaxTemp, javax.swing.GroupLayout.DEFAULT_SIZE, 75, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblHumidity, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCity)
                    .addComponent(lblTemperature)
                    .addComponent(lblMinTemp)
                    .addComponent(lblMaxTemp)
                    .addComponent(lblHumidity)
                    .addComponent(lblCondition))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1);
        jPanel1.setBounds(10, 210, 460, 30);

        jLabel1.setIcon(new javax.swing.ImageIcon("D:\\Cloud\\Dropbox\\4 UNI\\Service Centric Cloud Computing\\LABs\\FlightAgencyWSClient\\images\\Weather-Api.jpg")); // NOI18N
        getContentPane().add(jLabel1);
        jLabel1.setBounds(-60, -70, 630, 400);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(WeatherRest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(WeatherRest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(WeatherRest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(WeatherRest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new WeatherRest().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblCity;
    private javax.swing.JLabel lblCondition;
    private javax.swing.JLabel lblHumidity;
    private javax.swing.JLabel lblMaxTemp;
    private javax.swing.JLabel lblMinTemp;
    private javax.swing.JLabel lblTemperature;
    // End of variables declaration//GEN-END:variables
}

